services:
    apache:
        build:
            context: .
            dockerfile: Dockerfile
            platforms: ['linux/amd64']  # Changé de arm64 à amd64
        container_name: laravel_apache
        restart: always
        working_dir: /var/www/html
        volumes:
            - ./:/var/www/html
            - ./docker/php/production.ini:/usr/local/etc/php/conf.d/local.ini
            - ./docker/apache/000-default.conf:/etc/apache2/sites-available/000-default.conf
        ports:
            - "80:80"
        networks:
            - laravel_network
        depends_on:
            - mysql
        environment:
            APP_ENV: production
            APP_DEBUG: false

    mysql:
        image: mysql:8.0
        container_name: laravel_mysql
        restart: always
        platform: linux/amd64  # Changé de arm64 à amd64
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        volumes:
            - mysql_data:/var/lib/mysql
            - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
        networks:
            - laravel_network
        command: --default-authentication-plugin=mysql_native_password

    phpmyadmin:
        image: phpmyadmin/phpmyadmin  # Image standard compatible AMD64
        container_name: laravel_phpmyadmin
        restart: always
        ports:
            - "8081:80"
        environment:
            PMA_HOST: mysql
            PMA_USER: ${DB_USERNAME}
            PMA_PASSWORD: ${DB_PASSWORD}
            UPLOAD_LIMIT: 300M
        networks:
            - laravel_network
        depends_on:
            - mysql

volumes:
    mysql_data:
        driver: local

networks:
    laravel_network:
        driver: bridge
